https://stackoverflow.com/questions/14500547/how-to-fall-back-if-elements-are-missing-for-a-certain-index/

If this occurs often, consider creating a function to do it for you:

```
def get_element(object, index, fallback):
    try:
        return object[index]
    except IndexError:
        return fallback
```

Then, call it:
```
get_element(foo_val, 3, None)
```

If the element is in range, it returns the correct value; if not, it returns the fallback value (```None``` in this case).